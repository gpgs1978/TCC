
import streamlit as st

st.set_page_config(page_title="Quiz TCC ‚Äì Distor√ß√µes Cognitivas", layout="centered")

st.title("üß† Quiz: Distor√ß√µes Cognitivas (CD-Quest)")
st.markdown("Teste seus conhecimentos sobre distor√ß√µes cognitivas com base na Terapia Cognitivo-Comportamental.")

# Dados das perguntas
perguntas = [
    {
        "pergunta": "1. Qual das frases abaixo representa um exemplo de PENSAMENTO DICOT√îMICO?",
        "opcoes": [
            "Eu fui bem, mas poderia ter ido melhor.",
            "Cometi um erro, ent√£o sou um fracasso total.",
            "√Äs vezes acerto, √†s vezes erro.",
            "Aprendi algo novo, mesmo que tenha errado."
        ],
        "correta": 1
    },
    {
        "pergunta": "2. Quando uma pessoa ignora os aspectos positivos de uma situa√ß√£o, ela comete qual distor√ß√£o?",
        "opcoes": [
            "Catastrofiza√ß√£o",
            "Leitura mental",
            "Desqualifica√ß√£o do positivo",
            "Personaliza√ß√£o"
        ],
        "correta": 2
    },
    {
        "pergunta": "3. Qual √© a distor√ß√£o cognitiva presente nesta frase: 'Se eu n√£o for perfeito, serei rejeitado'?",
        "opcoes": [
            "Afirma√ß√µes do tipo 'deveria'",
            "Racioc√≠nio emocional",
            "Supergeneraliza√ß√£o",
            "Personaliza√ß√£o"
        ],
        "correta": 0
    },
    {
        "pergunta": "4. 'Tenho certeza de que todos perceberam meu erro' √© um exemplo de:",
        "opcoes": [
            "Previs√£o do futuro",
            "Leitura mental",
            "Amplia√ß√£o",
            "Rotula√ß√£o"
        ],
        "correta": 1
    },
    {
        "pergunta": "5. Qual distor√ß√£o cognitiva √© demonstrada por: 'Vou fracassar e isso ser√° insuport√°vel'?",
        "opcoes": [
            "Pensamento dicot√¥mico",
            "Vis√£o em t√∫nel",
            "Catastrofiza√ß√£o",
            "Racioc√≠nio emocional"
        ],
        "correta": 2
    }
]

respostas_usuario = []
pontuacao = 0

with st.form("quiz_form"):
    for i, p in enumerate(perguntas):
        st.markdown(f"**{p['pergunta']}**")
        escolha = st.radio("Escolha uma op√ß√£o:", p["opcoes"], key=f"q{i}")
        respostas_usuario.append(escolha)

    submitted = st.form_submit_button("Enviar respostas")

if submitted:
    for i, p in enumerate(perguntas):
        resposta_correta = p["opcoes"][p["correta"]]
        if respostas_usuario[i] == resposta_correta:
            st.success(f"‚úÖ Pergunta {i+1}: Correta!")
            pontuacao += 1
        else:
            st.error(f"‚ùå Pergunta {i+1}: Incorreta. Resposta correta: **{resposta_correta}**")

    st.markdown("---")
    st.subheader(f"üéØ Pontua√ß√£o final: {pontuacao} de {len(perguntas)}")
